#!/usr/bin/zsh

#System services
# - pcscd.service
# - lightdm.service
# - snapper-cleanup.timer
# - strongswan.service
# - usbguard.service
# - usbguard-dbus.service
#
#User services
# - dunst.service
# - yubikey-touch-detector.service
#
#
#Steps
# - DONE: Add custom repo to sources
# - DONE: Install packages
# - Link/copy config files
# - Start services
# - Add Strongswan config
#   - Trust & add certs (maybe request USB key?)
#   - Add to connman/networkmanager?
#   - change perms 


set -e
exec 2> >(while read line; do echo -e "\e[01;31m$line\e[0m"; done)

script_name="$(basename "$0")"
dotfiles_dir="$(cd "$(dirname "$0")"; pwd)"
cd "$dotfiles_dir"

assign() {
  op="$1"
  if [[ "$op" != "link" && "$op" != "copy" ]]; then
    echo "Unknown operation: $op"
    exit 1
  fi

  orig_file="$2"
  dest_file="$3"

  mkdir -p "$(dirname "$orig_file")"
  mkdir -p "$(dirname "$dest_file")"

  rm -rf "$dest_file"

  if [[ "$op" == "link" ]]; then
    ln -s "$orig_file" "$dest_file"
    echo "$dest_file -> $orig_file"
  else
    cp -R "$orig_file" "$dest_file"
    echo "$dest_file <= $orig_file"
  fi
}

link() {
  assign "link" "$dotfiles_dir/$1" "$HOME/$1"
}

copy() {
  assign "copy" "$dotfiles_dir/$1" "/$1"
}

systemctl_enable_start() {
  if [ "$#" -eq 1 ]; then
    target="system"
    name="$1"
  else
    target="$1"
    name="$2"
  fi
  if [[ "$target" == "user" ]]; then
    echo "systemctl --user enable --now "$name""
    systemctl --user enable --now "$name"
  else
    echo "systemctl enable --now "$name""
    systemctl enable --now "$name"
  fi
}

if [ "$(whoami)" != "root" ]; then
    cd stow
    stow -vn -t $HOME desktop
    cd ..
fi
