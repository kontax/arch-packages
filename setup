#!/usr/bin/zsh

#System services
# - pcscd.service
# - lightdm.service
# - snapper-cleanup.timer
# - strongswan.service
# - usbguard.service
# - usbguard-dbus.service
#
#User services
# - dunst.service
# - yubikey-touch-detector.service
#
#
#Steps
# - DONE: Add custom repo to sources
# - DONE: Install packages
# - Link/copy config files
# - Start services
# - Add Strongswan config
#   - Trust & add certs (maybe request USB key?)
#   - Add to connman/networkmanager?
#   - change perms 

set -e
exec 2> >(while read line; do echo -e "\e[01;31m$line\e[0m"; done)

GPG_KEY="36E285244BD76041"
AUR_KEY="110037EA14B0244A"

system_options=(base desktop)

script_name="$(basename "$0")"
dotfiles_dir="$(cd "$(dirname "$0")"; pwd)"
cd "$dotfiles_dir"

systemctl_enable() {
  if [ "$#" -eq 1 ]; then
    target="system"
    name="$1"
  else
    target="$1"
    name="$2"
  fi
  if [[ "$target" == "user" ]]; then
    echo "systemctl --user enable "$name""
    systemctl --user enable "$name"
  else
    echo "systemctl enable "$name""
    systemctl enable "$name"
  fi
}

if [ "$(whoami)" != "root" ]; then

    system_sel=$(printf '%s\n' "${system_options[@]}" | fzy)

    if ! gpg -k | grep "$GPG_KEY" > /dev/null; then
        echo "===================="
        echo " Importing PGP keys "
        echo "===================="
        curl -skL www.coulson.ie/pgp_keys.asc | gpg --import
        echo -e "5\ny\n" | gpg --command-fd 0 --expert --edit-key "$GPG_KEY" trust
        echo -e "5\ny\n" | gpg --command-fd 0 --expert --edit-key "$AUR_KEY" trust
    fi

    if [[ ! -a "$HOME/.config/Yubico/u2f_keys" ]]; then
        echo "===================================="
        echo " Configuring Yubikey (touch it now) "
        echo "===================================="
        mkdir -p "$HOME/.config/Yubico"
        pamu2fcfg -ujames > "$HOME/.config/Yubico/u2f_keys"
        # Can't do this as there's no pinentry
        #gpg --card-status >/dev/null
    fi


    echo "====================="
    echo " Setting up dotfiles "
    echo "====================="

    cd stow
    if [[ $system_sel == "base" ]]; then
        stow -v -t $HOME base --ignore '.*\.secret'
    fi

    if [[ $system_sel == "desktop" ]]; then
        stow -v -t $HOME base --ignore '.*\.secret'
        stow -v -t $HOME desktop --override '\.gnupg/*' --ignore '.*\.secret'

        systemctl_enable "user" "yubikey-touch-detector.service"
        systemctl_enable "user" "dunst.service"

    fi
    cd ..

    echo ""
    echo "======================================="
    echo " Switching to root user to continue... "
    echo "======================================="
    echo "..."
    sudo -s "$dotfiles_dir/$script_name"
    exit

fi

if [[ "$(whoami)" == "root" ]]; then

    echo "========================"
    echo " Importing certificates "
    echo "========================"
    curl -skL www.coulson.ie/Coulson_Root_CA.pem -o /etc/ca-certificates/trust-source/anchors/Coulson_Root_CA.crt
    curl -skL www.coulson.ie/Coulson_TLS_CA.pem -o /etc/ca-certificates/trust-source/anchors/Coulson_TLS_CA.crt
    trust extract-compat

    # Decrypt secret files
    #   * /etc/private-internet-access/login.conf.secret

    mkdir /var/cache/pacman/couldinho-arch-aur

fi
